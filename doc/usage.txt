* Using TurboVNC
{anchor: TurboVNC_Usage}

** Starting and Connecting to a TurboVNC Session

*** Procedure
#OPT: noList! plain!

	#. Open a new Command Prompt/terminal window on your client machine.

	#. In the new Command Prompt/terminal window, open a Secure Shell (SSH)
		session into the TurboVNC host:

		#Verb: <<---
		ssh {user}@{host}
		---

		Replace __''{user}''__ with your username on the TurboVNC host and
		__''{host}''__ with the hostname or IP address of the host.

	#. In the SSH session, start a TurboVNC session:

		#Verb: <<---
		/opt/TurboVNC/bin/vncserver
		---

	#. Make a note of the X display number that the TurboVNC session is
		occupying, for instance:
		{nl}{nl}
		''Desktop 'TurboVNC: my_host:1 (my_user)' started on display my_host:1''
		{nl}{nl}
		If this is the first time that a TurboVNC session has ever been run
		under this user account, and if VNC password authentication is enabled for
		the session, then TurboVNC will prompt for a VNC password.

	#. The SSH session can now be exited, if desired.

	#. On the client machine, start the TurboVNC Viewer.

		Linux/Un*x clients :: {:}
		Open a new terminal/xterm and type
		#Verb: <<---
		/opt/TurboVNC/bin/vncviewer
		---

		Mac clients :: {:}
		Open the "TurboVNC Viewer" application, located in the "TurboVNC"
		Applications folder.

		Windows clients :: {:}
		Select "TurboVNC Viewer" in the "TurboVNC" Start Menu group.

	#. A small dialog box will appear.
		{nl}{nl}
		{img:newconn.png}
		{nl}{nl}
		Enter the X display name (hostname, or IP address, and display number) of
		the TurboVNC session in the "VNC server" field, then click "Connect".

	#. Another dialog box appears, prompting for the password (if Standard
		VNC authentication is being used) or for the username and password (if
		Unix Login authentication is being used.)
		{nl}{nl}
		| Standard VNC Authentication Dialog | {img:vncauth.png} |
		| Unix Login Authentication Dialog   | {img:unixauth.png} |
		{nl}
		Enter the VNC session password or the Unix username/password and press
		Enter.
		{nl}{nl}
		A TurboVNC desktop window should appear on your client machine.  This
		window contains a virtual desktop with which you can interact to launch
		X-Windows applications on the TurboVNC host.

*** Window Manager Compatibility

This version of the TurboVNC Server can run 3D (compositing) window managers
(such as Unity or GNOME 3+ or KDE 5+) using its built-in software OpenGL
implementation, and it also provides an option (''-vgl'') that allows for
running 3D window managers using VirtualGL.  However, for performance reasons,
it is generally recommended that you use a 2D window manager with the TurboVNC
Server (even with VirtualGL, 3D window managers have a lot of overhead.)  As of
this writing, Ubuntu, RHEL 7+, and Fedora provide an optional 2D window manager
called "GNOME Fallback", "GNOME Flashback", or "GNOME Classic", which will
automatically be used if it is installed and the ''TVNC_WM'' environment
variable is set to ''2d''.  For other systems that lack a 2D window manager, it
is recommended that you install MATE.  Refer to
[[http://www.turbovnc.org/Documentation/Compatibility][this report]] for an
up-to-date list of window managers that have been tested with this version of
the TurboVNC Server, how to configure the TurboVNC Server to use those window
managers, and a list of known compatibility issues.

** Disconnecting and Killing a TurboVNC Session

Closing the TurboVNC Viewer disconnects from the TurboVNC session, but the
TurboVNC session will remain running on the TurboVNC host (as will any
applications that you may have started within the session), and you can
reconnect to the session at any time.

If the TurboVNC session was created with default settings, then the easiest way
to kill it is to log out of the window manager running in the session.  You
can also type the following command:

	#Verb: <<---
	/opt/TurboVNC/bin/vncserver -kill :{n}
	---

from a terminal in the TurboVNC session or from an SSH session on the host.
Replace __''{n}''__ with the X display number of the TurboVNC session you want
to kill.

To list the X display numbers and process ID's of all TurboVNC sessions
currently running under your user account on a particular host, type the
following command:

	#Verb: <<---
	/opt/TurboVNC/bin/vncserver -list
	---

** Using TurboVNC in a Web Browser

When a TurboVNC session is started, the ''vncserver'' script can optionally
start an instance of [[https://novnc.com][noVNC]], an HTML 5/JavaScript VNC
viewer that works in any web browser (with reduced performance and features
relative to the TurboVNC Viewer.)  This allows you to easily connect to a
TurboVNC session from a machine that does not have the TurboVNC Viewer
installed (including mobile devices.)

To launch noVNC along with a TurboVNC session, pass ''-novnc ''__''{script}''__
to ''/opt/TurboVNC/bin/vncserver'' when starting the session, where
__''{script}''__ is the launch script for the noVNC WebSockets proxy (setting
the ''$noVNC'' variable in ''turbovncserver.conf'' has the same effect.)  The
''vncserver'' script will print the noVNC URL, which will be of the form:

''http://''__''{host}''__'':{5800+''__''n''__''}/vnc.html''

or

''https://''__''{host}''__'':{5800+''__''n''__''}/vnc.html''

where __''{host}''__ is the hostname or IP address of the TurboVNC host, and
__''n''__ is the X display number of the TurboVNC session.

Point your web browser to that URL in order to access the TurboVNC session.
You can optionally pass ''-novnccert ''__''{combined_certificate_file}''__ to
''vncserver'' to encrypt the client/host connection using HTTPS.  See the
''vncserver'' man page for more details.

	!!! NOTE: noVNC only supports VNC Password authentication, so it is strongly
	recommended that it be used only with one-time passwords unless the
	connection is encrypted using HTTPS.

** Using SSH to Secure a TurboVNC Connection
{anchor: Secure_TurboVNC_Usage}

The connection between the TurboVNC Server and the TurboVNC Viewer is encrypted
by default (refer to {ref prefix="Chapter ": Security_Extensions}.)  However,
it may be preferable to secure the TurboVNC connection using SSH rather than
TurboVNC's built-in encryption, particularly if one does not want to open
additional ports in the host's firewall.  This can easily be accomplished by
using the ''-via'' and ''-tunnel'' command-line options in the TurboVNC Viewer
(or the equivalent GUI options, which are located under the "Security" tab in
the Options dialog.)

The ''-via'' and ''-tunnel'' options in the TurboVNC Viewer take advantage of
the port forwarding feature in SSH.  For instance, running

	#Verb: <<---
	{vncviewer} -via {user}@{host} localhost:{n}
	---

or

	#Verb: <<---
	{vncviewer} -tunnel {user}@{host}
	---

is the equivalent of running

	#Verb: <<---
	ssh -L {fp}:localhost:{5900+n} {user}@{host}
	{vncviewer} localhost::{fp}
	---

where __''{fp}''__ is a free TCP port on the client machine (this is
automatically determined by the TurboVNC Viewer.)

	!!! In the above examples, ''{vncviewer}'' is the command used to launch the
	TurboVNC Viewer-- ''/opt/TurboVNC/bin/vncviewer'' on Mac/Linux/Un*x
	systems or ''c:\\Program Files\\TurboVNC\\vncviewer.bat'' on Windows systems.

''-tunnel'' can be used as a shortcut whenever the SSH and VNC hosts are the
same machine.  ''-via'' is more flexible, since it allows you to specify the
VNC server to which to connect.  The VNC server is specified from the point of
view of the SSH server, which is why we used ''localhost'' in the above
example.

The command used to establish the SSH tunnel is configurable by way of
environment variables.  See {ref prefix="Section ": VNC_VIA_CMD} for more
details.

*** Forcing SSH Connections
#OPT: noList! plain!

Passing an argument of ''-localhost'' to ''vncserver'' will force the TurboVNC
session to accept inbound connections only from the TurboVNC host.  This
effectively forces SSH tunneling to be used for remote connections.  If the
''no-remote-connections'' directive is set in the TurboVNC security
configuration file, then that has the effect of enabling the ''-localhost''
option for all new TurboVNC sessions that are started on the host.

Passing an argument of ''-noreverse'' to ''vncserver'' will disable the ability
to make outbound (reverse) connections from the TurboVNC session.  If the
''no-reverse-connections'' directive is set in the TurboVNC security
configuration file, then that has the effect of enabling the ''-noreverse''
option for all new TurboVNC sessions that are started on the host.

If the host is configured such that it only allows SSH connections, then
disallowing the TLS* security types on a system-wide basis (by setting the
''permitted-security-types'' directive in the TurboVNC security configuration
file) is recommended.  Otherwise, when using the TurboVNC Viewer with default
settings, the connection will have redundant encryption.

** Running OpenGL Applications

The TurboVNC Server includes a software GLX/OpenGL implementation that can be
used for casual 3D rendering.  This implementation uses the swrast DRI driver
provided by Mesa 8.x and later.  On systems that do not have vendor-specific
GPU drivers installed, or on systems that provide a libglvnd-enabled build of
Mesa, TurboVNC's software OpenGL implementation can use direct rendering.
Otherwise, it falls back to indirect rendering, which is limited to the OpenGL
1.4 API and which may perform sluggishly (particularly with continuous mouse
input.)  In general, if the TurboVNC host has a GPU, then you should use
[[#VGL][VirtualGL]] rather than relying on TurboVNC's software OpenGL
implementation.

Passing ''-extension GLX'' to ''vncserver'' disables the built-in GLX/OpenGL
implementation, thus restoring the behavior of TurboVNC 2.1.x and earlier
(which required VirtualGL in order to run OpenGL applications.)  Passing
''-iglx'' to ''vncserver'' disables indirect rendering.  If the built-in
GLX/OpenGL implementation is not functioning properly, then pass ''-verbose''
to ''vncserver'' to log informational messages that may reveal the source of
the problem.

** Further Reading

For more detailed instructions on the usage of TurboVNC:

	TurboVNC Server :: Refer to the TurboVNC man pages:
	#Verb: <<---
	man -M /opt/TurboVNC/man vncserver
	man -M /opt/TurboVNC/man Xvnc
	man -M /opt/TurboVNC/man vncconnect
	man -M /opt/TurboVNC/man vncpasswd
	---

	TurboVNC Viewer :: Run
	#Verb: <<---
	/opt/TurboVNC/bin/vncviewer -?
	---
	on Un*x or
	#Verb: <<---
	c:\Program Files\TurboVNC\vncviewer.bat -?
	---
	on Windows to display a full list of supported command-line
	options/parameters and their descriptions.
